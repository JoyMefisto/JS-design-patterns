/*
Объект, реализующий шаблон итератора, должен предоставить метод next(). При последующем обращении метод next() должен вернуть следующий элемент,
 и только вам решать, что означает понятие «следующий» для вашей конкретной структуры данных. Предположим, что имеется объект agg, 
 и вам необходимо обеспечить доступ к каждому элементу простым вызовом метода next() в цикле.

При реализации шаблона итератора имеет смысл обеспечить сокрытие самих данных и указателя (индекса) на следующий доступный элемент. 
Чтобы продемонстрировать типичную реализацию, предположим, что данные организованы в виде обычного массива, 
а «специальная» логика извлечения следующего элемента будет возвращать каждый второй элемент массива:
*/
var agg = (function () {
	var index = 0,
		data = [1, 2, 3, 4, 5],
		length = data.length;

	return {
		next: function () {
			var element;
			if (!this.hasNext()) {
				return null;
			}

			element = data[index];
			index = index + 2;
			return element;
		},

		rewind: function () {
			index = 0;
		},

		current: function () {
			return data[index];
		},

		hasNext: function () {
			return index < length;
		}
	};
}());

// проверяем
// этот цикл выведет значения 1, 3 и 5
while (agg.hasNext()) {
	console.log(agg.next());
}

// возврат
agg.rewind();
console.log(agg.current()); // 1